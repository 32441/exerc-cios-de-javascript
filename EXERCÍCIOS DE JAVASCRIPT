QUESTÃO 1) function isPrime(number)  {
  // Verifica se o número é menor que 2, pois números menores que 2 não são primos
  if (number < 2) {
    return false;
  }

  // Verifica se o número é divisível por algum outro número além de 1 e ele mesmo
  for (let i = 2; i < number; i++) {
    if (number % i === 0) {
      return false;
    }
  }

  // Se o número passou pelos testes anteriores, então ele é primo
  return true;
}

Você pode chamar essa função passando o número que deseja verificar como argumento e ela retornará true se o número for primo e false caso contrário.

Exemplo de uso: 
console.log(isPrime(7));   // true
console.log(isPrime(10));  // false
console.log(isPrime(23));  // true
console.log(isPrime(1));   // false


QUESTÃO 2) function reverseString(str) {
  // Converte a string em um array de caracteres, inverte o array e o converte de volta para uma string
  return str.split('').reverse().join('');
  
}
Você pode chamar essa função passando a string que deseja inverter como argumento e ela retornará a string invertida.

Exemplo de uso:
console.log(reverseString('Hello'));  // "olleH"
console.log(reverseString('OpenAI')); // "IAnepo"
console.log(reverseString('12345'));  // "54321"


QUESTÃO 3) function findMaxElement(arr) {
  if (arr.length === 0) {
    // Retorna null se o vetor estiver vazio
    return null;
  }

  let max = arr[0]; // Assume que o primeiro elemento é o maior

  // Percorre o vetor a partir do segundo elemento e compara com o máximo atual
  for (let i = 1; i < arr.length; i++) {
    if (arr[i] > max) {
      max = arr[i];
    }
  }

  return max;
}

Você pode chamar essa função passando o vetor de números como argumento e ela retornará o maior elemento presente no vetor.

Exemplo de uso:
console.log(findMaxElement([5, 9, 3, 1, 7]));      // 9
console.log(findMaxElement([-1, -5, -3, -9]));    // -1
console.log(findMaxElement([10, 2, 8, 6, 4]));    // 10
console.log(findMaxElement([]));                  // null


QUESTÃO 5) function countFrequency(arr) {
  let frequency = {};

  // Percorre o vetor e conta a frequência de cada elemento
  for (let i = 0; i < arr.length; i++) {
    if (frequency[arr[i]]) {
      frequency[arr[i]]++;
    } else {
      frequency[arr[i]] = 1;
    }
  }

  return frequency;
}


Você pode chamar essa função passando o vetor como argumento e ela retornará um objeto contendo a frequência de cada elemento presente no vetor.

Exemplo de uso: 
console.log(countFrequency([1, 2, 2, 3, 1, 1, 4]));
// {1: 3, 2: 2, 3: 1, 4: 1}

console.log(countFrequency(['a', 'b', 'a', 'c', 'b', 'a']));
// {'a': 3, 'b': 2, 'c': 1}

console.log(countFrequency([]));
// {}

console.log(countFrequency([1, 2, 3, 4, 5]));
// {1: 1, 2: 1, 3: 1, 4: 1, 5: 1}



QUESTÃO 6) function validatePassword(password) {
  // Verifica se a senha tem pelo menos 8 caracteres
  if (password.length < 8) {
    return false;
  }

  // Verifica se a senha contém pelo menos uma letra maiúscula
  if (!/[A-Z]/.test(password)) {
    return false;
  }

  // Verifica se a senha contém pelo menos uma letra minúscula
  if (!/[a-z]/.test(password)) {
    return false;
  }

  // Verifica se a senha contém pelo menos um número
  if (!/\d/.test(password)) {
    return false;
  }

  // Se a senha passou por todas as verificações, então é válida
  return true;
}


Você pode chamar essa função passando a senha que deseja validar como argumento e ela retornará true se a senha atender aos critérios e false caso contrário.

Exemplo de uso:
console.log(validatePassword('Abcdefg1'));     // true
console.log(validatePassword('password'));     // false
console.log(validatePassword('12345678'));     // false
console.log(validatePassword('Password'));     // false
console.log(validatePassword('aB1'));          // false



